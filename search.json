[{"path":"/articles/markdown.html","id":"chunk-examples","dir":"Articles","previous_headings":"","what":"Chunk examples","title":"Using nomnoml in R markdown","text":"rendered example chunk, using default plot size: diagram, time specified size:","code":"#stroke: #a86128 #direction: down [<frame>Decorator pattern|   [<abstract>Component||+ operation()]   [Client] depends --> [Component]   [Decorator|- next: Component]   [Decorator] decorates -- [ConcreteComponent]   [Component] <:- [Decorator]   [Component] <:- [ConcreteComponent] ] #stroke: #a86128 #direction: down [<frame>Decorator pattern|   [<abstract>Component||+ operation()]   [Client] depends --> [Component]   [Decorator|- next: Component]   [Decorator] decorates -- [ConcreteComponent]   [Component] <:- [Decorator]   [Component] <:- [ConcreteComponent] ]"},{"path":"/articles/markdown.html","id":"unicode-chunks","dir":"Articles","previous_headings":"","what":"Unicode chunks","title":"Using nomnoml in R markdown","text":"Unicode escapes (using R conventions) can used code chunks. next example, unicode character \\u03b1 displays greek alpha (α). course, can use unicode character directly include backslashes labels, specify escape = TRUE:","code":"```{nomnoml, escape = TRUE} [Hello]-\\u03B1[Unicode!] ``` ```{nomnoml, escape = TRUE} [Hello]-α[Unicode!] ``` ```{nomnoml, escape = TRUE} [Hello]-\\A[Escape character!] ```"},{"path":"/articles/markdown.html","id":"complex-chunks","dir":"Articles","previous_headings":"","what":"Complex chunks","title":"Using nomnoml in R markdown","text":"2012 nomnoml.js library added support multiple nodes single expression. means ’s possible create diagrams like :","code":"#direction: right [<start>start] -> [process] -> [<end>end]"},{"path":"/articles/pdf.html","id":"chunk-examples","dir":"Articles","previous_headings":"","what":"Chunk examples","title":"Using nomnoml with pdf documents","text":"rendered example chunk, using default plot size: diagram, time specified size:","code":"#stroke: #a86128 #direction: down [<frame>Decorator pattern|   [<abstract>Component||+ operation()]   [Client] depends --> [Component]   [Decorator|- next: Component]   [Decorator] decorates -- [ConcreteComponent]   [Component] <:- [Decorator]   [Component] <:- [ConcreteComponent] ] #stroke: #a86128 #direction: down [<frame>Decorator pattern|   [<abstract>Component||+ operation()]   [Client] depends --> [Component]   [Decorator|- next: Component]   [Decorator] decorates -- [ConcreteComponent]   [Component] <:- [Decorator]   [Component] <:- [ConcreteComponent] ]"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andrie de Vries. Author, maintainer. Javier Luraschi. Author. Daniel Kallin. Copyright holder.            nomnoml.js library, <https://nomnoml.com> RStudio. Copyright holder, funder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"de Vries , Luraschi J (2023). nomnoml: Sassy 'UML' Diagrams. R package version 0.2.8, https://github.com/rstudio/nomnoml.","code":"@Manual{,   title = {nomnoml: Sassy 'UML' Diagrams},   author = {Andrie {de Vries} and Javier Luraschi},   year = {2023},   note = {R package version 0.2.8},   url = {https://github.com/rstudio/nomnoml}, }"},{"path":"/index.html","id":"nomnoml-","dir":"","previous_headings":"","what":"Sassy UML Diagrams","title":"Sassy UML Diagrams","text":"nomnoml provides R interface nomnoml.js, tool drawing sassy UML diagrams based syntax customizable styling.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Sassy UML Diagrams","text":"Install CRAN: GitHub using:","code":"install.packages(\"nomnoml\") install.packages(\"remotes\") remotes::install_github(\"rstudio/nomnoml\")"},{"path":"/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Sassy UML Diagrams","text":"can create first diagram running:  make diagram flow vertically, default nomnoml.com, add direction directive:  can also use nomnoml R Markdown:","code":"nomnoml::nomnoml(\"[Hello]-[World!]\") #direction: down [Hello]-[World!] --- title: \"A Diagram\" output: html_document ---  ```{r, setup, include=FALSE} library(nomnoml) ```  ```{nomnoml} #stroke: orange #.box: fill=#8f8 dashed visual=ellipse  [A]-[B] [B]-[<box>C] ```"},{"path":"/index.html","id":"svg","dir":"","previous_headings":"Getting Started","what":"SVG","title":"Sassy UML Diagrams","text":"render using SVG, add svg = TRUE render nomnoml chunk R Markdown, add svg=TRUE chunk options","code":"nomnoml(diagram, svg = TRUE) ```{nomnoml, svg=TRUE} #stroke: orange #.box: fill=#8f8 dashed visual=ellipse  [A]-[B] [B]-[<box>C] ```"},{"path":"/index.html","id":"advanced","dir":"","previous_headings":"Getting Started","what":"Advanced","title":"Sassy UML Diagrams","text":"Notice much complex diagrams can designed using nomnoml combining association types, classifier types, directives custom classifier styles.","code":"#stroke: #a86128 #direction: down [<frame>Decorator pattern|   [<abstract>Component||+ operation()]   [Client] depends --> [Component]   [Decorator|- next: Component]   [Decorator] decorates -- [ConcreteComponent]   [Component] <:- [Decorator]   [Component] <:- [ConcreteComponent] ]"},{"path":"/index.html","id":"association-types","dir":"","previous_headings":"Getting Started","what":"Association types","title":"Sassy UML Diagrams","text":"","code":"-    association ->   association <->  association -->  dependency <--> dependency -:>  generalization <:-  generalization --:> implementation <:-- implementation +-   composition +->  composition o-   aggregation o->  aggregation -o)  ball and socket o<-) ball and socket ->o  ball and socket --   note -/-  hidden _>   weightless edge __   weightless dashed edge"},{"path":"/index.html","id":"classifier-types","dir":"","previous_headings":"Getting Started","what":"Classifier types","title":"Sassy UML Diagrams","text":"","code":"[name] [<abstract> name] [<instance> name] [<reference> name] [<note> name] [<package> name] [<frame> name] [<database> name] [<pipe> name] [<start> name] [<end> name] [<state> name] [<choice> name] [<sync> name] [<input> name] [<lollipop> lollipop] [<sender> name] [<socket> socket] [<receiver> name] [<transceiver> name] [<actor> name] [<usecase> name] [<label> name] [<hidden> name] [<table> name| a | 5 || b | 7]"},{"path":"/index.html","id":"directives","dir":"","previous_headings":"Getting Started","what":"Directives","title":"Sassy UML Diagrams","text":"Directives available using command line interface","code":"#import: my-common-styles.nomnoml #arrowSize: 1 #bendSize: 0.3 #direction: down | right #gutter: 5 #edgeMargin: 0 #gravity: 1 #edges: hard | rounded #background: transparent #fill: #eee8d5; #fdf6e3 #fillArrows: false #font: Calibri #fontSize: 12 #leading: 1.25 #lineWidth: 3 #padding: 8 #spacing: 40 #stroke: #33322E #title: filename #zoom: 1 #acyclicer: greedy #ranker: network-simplex | tight-tree | longest-path #import: my-common-styles.nomnoml"},{"path":"/index.html","id":"custom-classifier-styles","dir":"","previous_headings":"Getting Started","what":"Custom classifier styles","title":"Sassy UML Diagrams","text":"directive starts “.” define classifier style. Available key/value pairs: Available modifiers ","code":"#.box: fill=#88ff88 #.blob: fill=pink visual=ellipse italic bold dashed [<box> GreenBox] [<blob> HideousBlob] fill=(any css color)  stroke=(any css color)  align=center align=left  direction=right direction=down  visual=actor visual=class visual=database visual=ellipse visual=end visual=frame visual=hidden visual=input visual=none visual=note visual=package visual=receiver visual=rhomb visual=roundrect visual=sender visual=start visual=table visual=transceiver center bold underline italic dashed empty"},{"path":"/reference/nomnoml-shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny bindings for nomnoml. — nomnoml-shiny","title":"Shiny bindings for nomnoml. — nomnoml-shiny","text":"Output render functions using nomnoml within Shiny applications interactive Rmd documents.","code":""},{"path":"/reference/nomnoml-shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny bindings for nomnoml. — nomnoml-shiny","text":"","code":"nomnomlOutput(outputId, width = \"100%\", height = \"400px\")  renderNomnoml(expr, env = parent.frame(), quoted = FALSE)"},{"path":"/reference/nomnoml-shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny bindings for nomnoml. — nomnoml-shiny","text":"outputId output variable read width, height Must valid CSS unit (like '100%', '400px', 'auto') number, coerced string 'px' appended. expr expression generates nomnoml env environment evaluate expr. quoted expr quoted expression (quote())? useful want save expression variable.","code":""},{"path":[]},{"path":"/reference/nomnoml.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and render a nomnoml diagram. — nomnoml","title":"Create and render a nomnoml diagram. — nomnoml","text":"Renders 'nomnoml' diagram 'htmlwidget' saves '.png' '.svg' image.","code":""},{"path":"/reference/nomnoml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and render a nomnoml diagram. — nomnoml","text":"","code":"nomnoml(   code = \"[Hello]-[World!]\",   png = NULL,   width = NULL,   height = NULL,   svg = FALSE,   ... )"},{"path":"/reference/nomnoml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and render a nomnoml diagram. — nomnoml","text":"code nomnoml diagram code. png Optional file name export diagram 'png'. width Optional width pixels exported 'png'. height Optional height pixels exported 'png'. svg Use 'svg' output instead 'png'? Notice rendering 'svg' par 'png' renders incorrectly times. ... Additional parameters.","code":""},{"path":"/reference/nomnoml.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create and render a nomnoml diagram. — nomnoml","text":"'nomnoml' syntax simple intuitive, \"Hello World\" example can rendered 'htmlwidget' follows: nomnoml::nomnoml(\"[Hello]-[World!]\") can also render 'png' file specific dimensions: nomnoml::nomnoml(\"[Hello]-[World!]\", png = \"hello.png\", 600, 100) Still, complex diagrams can defined combining multiple association types, classifier types, directives custom classifier styles. can also use nomnoml 'knitr' chunk render inline diagrams R Markdown documents.","code":""},{"path":"/reference/nomnoml.html","id":"syntax","dir":"Reference","previous_headings":"","what":"Syntax","title":"Create and render a nomnoml diagram. — nomnoml","text":"summary available nomnoml syntax, including association types, directives customer classifier styles, see nomnoml_syntax","code":""},{"path":[]},{"path":"/reference/nomnoml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create and render a nomnoml diagram. — nomnoml","text":"","code":"# Render simple diagram: nomnoml::nomnoml(\"[Hello]-[World!]\")  {\"x\":{\"code\":\"\\n#fill: #FEFEFF\\n#lineWidth: 1\\n#zoom: 4\\n#direction: right\\n\\n[Hello]-[World!]\",\"svg\":false,\"png\":null},\"evals\":[],\"jsHooks\":[]} # Render complex diagram: nomnoml::nomnoml(\"   #stroke: #a86128   [<frame>Decorator pattern|     [<abstract>Component||+ operation()]     [Client] depends --> [Component]     [Decorator|- next: Component]     [Decorator] decorates -- [ConcreteComponent]     [Component] <:- [Decorator]     [Component] <:- [ConcreteComponent]   ]\")  {\"x\":{\"code\":\"\\n#fill: #FEFEFF\\n#lineWidth: 1\\n#zoom: 4\\n#direction: right\\n\\n\\n  #stroke: #a86128\\n  [<frame>Decorator pattern|\\n    [<abstract>Component||+ operation()]\\n    [Client] depends --> [Component]\\n    [Decorator|- next: Component]\\n    [Decorator] decorates -- [ConcreteComponent]\\n    [Component] <:- [Decorator]\\n    [Component] <:- [ConcreteComponent]\\n  ]\",\"svg\":false,\"png\":null},\"evals\":[],\"jsHooks\":[]}"},{"path":"/reference/nomnoml_syntax.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of nomnoml syntax. — nomnoml_syntax","title":"Summary of nomnoml syntax. — nomnoml_syntax","text":"Summary nomnoml syntax.","code":""},{"path":"/reference/nomnoml_syntax.html","id":"association-types","dir":"Reference","previous_headings":"","what":"Association Types","title":"Summary of nomnoml syntax. — nomnoml_syntax","text":"association - association -> association <-> dependency --> dependency <--> generalization -:> generalization <:- implementation --:> implementation <:-- composition +- composition +-> aggregation o- aggregation o-> note -- hidden -/- weightless edge _> weightless dashed __","code":""},{"path":"/reference/nomnoml_syntax.html","id":"classifier-types","dir":"Reference","previous_headings":"","what":"Classifier Types","title":"Summary of nomnoml syntax. — nomnoml_syntax","text":"[name] [<abstract> name] [<instance> name] [<note> name] [<reference> name] [<package> name] [<frame> name] [<database> name] [<start> name] [<end> name] [<state> name] [<choice> name] [<input> name] [<sender> name] [<receiver> name] [<transceiver> name] [<actor> name] [<usecase> name] [<label> name] [<hidden> name] [<table> table | | 5 | b | 7]","code":""},{"path":"/reference/nomnoml_syntax.html","id":"directives","dir":"Reference","previous_headings":"","what":"Directives","title":"Summary of nomnoml syntax. — nomnoml_syntax","text":"#arrowSize: 1 #bendSize: 0.3 #direction: | right #gutter: 5 #edgeMargin: 0 #edges: hard | rounded #background: transparent #fill: #eee8d5; #fdf6e3 #fillArrows: false #font: Calibri #fontSize: 12 #leading: 1.25 #lineWidth: 3 #padding: 8 #spacing: 40 #stroke: #33322E #title: filename #zoom: 1 #acyclicer: greedy #ranker: network-simplex | tight-tree | longest-path","code":""},{"path":"/reference/nomnoml_syntax.html","id":"custom-classifier-styles","dir":"Reference","previous_headings":"","what":"Custom Classifier Styles","title":"Summary of nomnoml syntax. — nomnoml_syntax","text":"directive starts . define classifier style. style written space separated list modifiers key/value pairs. #.box: fill=#8f8 dashed #.blob: visual=ellipse [<box> GreenBox] [<blob> HideousBlob]","code":""},{"path":"/reference/nomnoml_syntax.html","id":"available-key-value-pairs-are-","dir":"Reference","previous_headings":"","what":"Available key/value pairs are:","title":"Summary of nomnoml syntax. — nomnoml_syntax","text":"fill=(css color) stroke=(css color) align=center align=left direction=right direction=visual=actor visual=class visual=database visual=ellipse visual=end visual=frame visual=hidden visual=input visual=none visual=note visual=package visual=receiver visual=rhomb visual=roundrect visual=sender visual=start visual=transceiver","code":""},{"path":"/reference/nomnoml_syntax.html","id":"style-title-and-text-body","dir":"Reference","previous_headings":"","what":"Style title and text body","title":"Summary of nomnoml syntax. — nomnoml_syntax","text":"title=left,italic,bold body=center,italic,bold","code":""},{"path":"/reference/nomnoml_syntax.html","id":"text-modifiers-","dir":"Reference","previous_headings":"","what":"Text modifiers:","title":"Summary of nomnoml syntax. — nomnoml_syntax","text":"bold underline italic dashed empty","code":""},{"path":"/reference/nomnoml_validate.html","id":null,"dir":"Reference","previous_headings":"","what":"Use the V8 JavaScript engine to validate a nomnoml diagram. — nomnoml_validate","title":"Use the V8 JavaScript engine to validate a nomnoml diagram. — nomnoml_validate","text":"Although nomnoml widgets render quickly IDE, can take seconds grab static screenshot create png file.  situations can helpful validate nomnoml JS library can parse diagram. function returns TRUE diagram can parsed, FALSE otherwise.  FALSE function also throws warning.","code":""},{"path":"/reference/nomnoml_validate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use the V8 JavaScript engine to validate a nomnoml diagram. — nomnoml_validate","text":"","code":"nomnoml_validate(diagram = \"[test]\")"},{"path":"/reference/nomnoml_validate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use the V8 JavaScript engine to validate a nomnoml diagram. — nomnoml_validate","text":"diagram nomnoml diagram validate","code":""},{"path":"/reference/nomnoml_validate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use the V8 JavaScript engine to validate a nomnoml diagram. — nomnoml_validate","text":"Either TRUE FALSE","code":""},{"path":[]},{"path":"/reference/nomnoml_validate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use the V8 JavaScript engine to validate a nomnoml diagram. — nomnoml_validate","text":"","code":"if (FALSE) { if (requireNamespace(\"V8\", quietly = TRUE)) nomnoml_validate(\"[hello] -> [world]\") }"},{"path":"/news/index.html","id":"nomnoml-028","dir":"Changelog","previous_headings":"","what":"nomnoml 0.2.8","title":"nomnoml 0.2.8","text":"Update nomnoml.js v1.6.2 Update webshot webshot2, thus removing dependency phantomjs","code":""},{"path":"/news/index.html","id":"nomnoml-027","dir":"Changelog","previous_headings":"","what":"nomnoml 0.2.7","title":"nomnoml 0.2.7","text":"CRAN release: 2023-06-29 Remove use numeric_version() comply changes R devel.","code":""},{"path":"/news/index.html","id":"nomnoml-026","dir":"Changelog","previous_headings":"","what":"nomnoml 0.2.6","title":"nomnoml 0.2.6","text":"CRAN release: 2023-03-11 Update nomnoml.js v1.5.3 Fix spurious package startup message Merge PR @dmurdoch add unicode support","code":""},{"path":"/news/index.html","id":"nomnoml-025","dir":"Changelog","previous_headings":"","what":"nomnoml 0.2.5","title":"nomnoml 0.2.5","text":"CRAN release: 2022-02-23 Correctly use packageStartupMessage()","code":""},{"path":"/news/index.html","id":"nomnoml-024","dir":"Changelog","previous_headings":"","what":"nomnoml 0.2.4","title":"nomnoml 0.2.4","text":"CRAN release: 2022-02-21 Update nomnoml.js version 1.4.0","code":""},{"path":"/news/index.html","id":"nomnoml-023","dir":"Changelog","previous_headings":"","what":"nomnoml 0.2.3","title":"nomnoml 0.2.3","text":"CRAN release: 2020-12-15 Fix CRAN check failures, specifically relaxing requirement phantomjs. PhantomJS necessary creating PNG files, including PNG output R Markdown, SVG output interactive widgets, e.g. shiny app.","code":""},{"path":"/news/index.html","id":"nomnoml-022","dir":"Changelog","previous_headings":"","what":"nomnoml 0.2.2","title":"nomnoml 0.2.2","text":"Update nomnoml v1.3.1 (taking dependency graphre) Add additional tests improved code coverage Add pkgdown documentation site Add nomnoml_validate(), experimental function validate diagram can parsed. Uses V8 package . Added “experimental badge” package","code":""},{"path":"/news/index.html","id":"nomnoml-021","dir":"Changelog","previous_headings":"","what":"nomnoml 0.2.1","title":"nomnoml 0.2.1","text":"Change maintainer @andrie Add additional tests","code":""},{"path":"/news/index.html","id":"nomnoml-020","dir":"Changelog","previous_headings":"","what":"nomnoml 0.2.0","title":"nomnoml 0.2.0","text":"CRAN release: 2020-05-26 Update nomnoml version 0.7.2 Add support ‘svg’ output ‘nomnoml()’. Fix issue introducing much blank space Rmd docs. Fix duplicate diagrams Shiny apps (@andrie, #15).","code":""},{"path":"/news/index.html","id":"nomnoml-010","dir":"Changelog","previous_headings":"","what":"nomnoml 0.1.0","title":"nomnoml 0.1.0","text":"CRAN release: 2019-06-13 Use nomnoml version 0.2.0 Support render PNGs. Support render ‘htmlwidgets’. Support ‘nomnoml’ chunks R Markdown.","code":""}]
